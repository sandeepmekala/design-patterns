@startuml Builder

interface Product {
    {abstract} +getType(): String
    {abstract} +getCPU(): String
    {abstract} +getRAM(): int
    {abstract} +getStorage(): int
}

class Computer {
    -type: String
    -CPU: String
    -RAM: int
    -storage: int
    +Computer(type: String, CPU: String, RAM: int, storage: int)
    +getType(): String
    +getCPU(): String
    +getRAM(): int
    +getStorage(): int
}

Product <|-- Computer

interface ComputerBuilder {
    {abstract} +setType(type: String): ComputerBuilder
    {abstract} +setCPU(CPU: String): ComputerBuilder
    {abstract} +setRAM(RAM: int): ComputerBuilder
    {abstract} +setStorage(storage: int): ComputerBuilder
    {abstract} +build(): Computer
}

class DesktopBuilder {
    -type: String = "Desktop"
    -CPU: String
    -RAM: int
    -storage: int
    +setType(type: String): ComputerBuilder
    +setCPU(CPU: String): ComputerBuilder
    +setRAM(RAM: int): ComputerBuilder
    +setStorage(storage: int): ComputerBuilder
    +build(): Computer
}

class LaptopBuilder {
    -type: String = "Laptop"
    -CPU: String
    -RAM: int
    -storage: int
    +setType(type: String): ComputerBuilder
    +setCPU(CPU: String): ComputerBuilder
    +setRAM(RAM: int): ComputerBuilder
    +setStorage(storage: int): ComputerBuilder
    +build(): Computer
}

ComputerBuilder <|.. DesktopBuilder
ComputerBuilder <|.. LaptopBuilder

class ComputerDirector {
    -builder: ComputerBuilder
    +ComputerDirector(builder: ComputerBuilder)
    +construct(): Computer
}

ComputerDirector "1" -- "1" ComputerBuilder

ComputerDirector ..> DesktopBuilder: Uses
ComputerDirector ..> LaptopBuilder: Uses

@enduml
